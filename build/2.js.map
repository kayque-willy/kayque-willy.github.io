{"version":3,"sources":["../../src/pages/questionary/questionary.module.ts","../../src/pages/questionary/questionary.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { QuestionaryPage } from './questionary';\n\n@NgModule({\n  declarations: [\n    QuestionaryPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(QuestionaryPage),\n  ],\n})\nexport class QuestionaryPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionary/questionary.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { AlertController, Content, IonicPage, LoadingController, NavController, NavParams } from 'ionic-angular';\nimport { Answer, AnswerNeighborhood, Questionary } from \"../../providers/questionary/questionary\";\nimport { Respondent } from \"../respondent-profile/respondent-profile\";\nimport { Neighborhood } from \"../../providers/neighborhood/neighborhood\";\nimport { Question, QuestionProvider } from \"../../providers/question/question\";\nimport { MetricItem, MetricValue, Prioritization } from \"../prioritization/prioritization\";\nimport { Storage } from \"@ionic/storage\";\nimport { DatabaseProvider } from \"../../providers/database/database\";\nimport { Plan } from \"../../providers/plan/plan\";\nimport { PrioritizationProvider } from \"../../providers/prioritization/prioritization\";\n\n@IonicPage()\n@Component({\n  selector: 'page-questionary',\n  templateUrl: 'questionary.html',\n})\nexport class QuestionaryPage {\n  @ViewChild(Content) content: Content;\n  answers: Answer[];\n  answersNeighborhoods: AnswerNeighborhood[];\n  plan: Plan;\n  questionary: Questionary;\n  respondent: Respondent;\n  neighborhoods: Neighborhood[];\n  neighborhoodsSelected: Neighborhood[] = [];\n  questions: Question[];\n  metricItems: MetricItem[];\n  currentQuestion: any;\n  currentQuestionIndex: number;\n  neighborhoodAnswer: number;\n  questionAnswer: number = -1;\n  showNeighborhoodList: boolean = false;\n  isYesSelected: boolean = false;\n  isNoSelected: boolean = false;\n  isDontKnowSelected: boolean = false;\n  btnContinueDisabled: boolean = true;\n  prioritizations: Prioritization[];\n  loader: any;\n  progress: number;\n  points: number;\n  totalQuestions: number;\n  showDontNow : boolean = true;\n\n  private NO = 0;\n  private YES: number = 1;\n  private DONT_KNOW = 2;\n\n  private MANY_NEIGHBORHOODS_PROBLEM = 0;\n  private CITY_PROBLEM = 1;\n  private RESPONDENT_NEIGHBORHOOD_PROBLEM: number = 2;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private questionProvider: QuestionProvider, private storage: Storage, private databaseProvider: DatabaseProvider, public loadingCtrl: LoadingController, private alertCtrl: AlertController, private priorizationProvider: PrioritizationProvider) {\n    this.progress = 0;\n    this.answers = navParams.get('answers');\n    this.answersNeighborhoods = navParams.get('answersNeighborhoods');\n    this.prioritizations = navParams.get('prioritizations');\n    this.questionary = navParams.get('questionary');\n    this.currentQuestionIndex = navParams.get('currentQuestionIndex');\n    this.currentQuestion = navParams.get('currentQuestion');\n    this.points = navParams.get('points');\n    this.isRuralZone();\n    let entities = ['neighborhoods', 'metricItems', 'respondent'];\n    this.databaseProvider.verifyEntities(entities)\n      .then((data) => {\n        if (data.length > 0 && data.filter((data) => data == false).length == 0) {\n          this.setEntities();\n        } else {\n          this.navigateBack();\n        }\n      })\n      .catch(() => this.navigateBack());\n    console.log(\"Criei página Questionário\");\n  }\n\n  navigateBack() {\n    this.loader = this.loadingCtrl.create();\n    this.loader.present();\n    this.navCtrl.setRoot('QuestionariesListPage', {}).then(this.loader.dismiss());\n  }\n\n  setEntities() {\n    this.storage.get('neighborhoods')\n      .then((data) => this.neighborhoods = data)\n      .catch(() => console.log('error setting neighborhoods'));\n    this.storage.get('metricItems')\n      .then((data) => this.metricItems = data)\n      .catch(() => console.log('error setting metricItems'));\n    this.storage.get('respondent')\n      .then((data) => this.respondent = data)\n      .catch(() => console.log('error setting respondent'));\n    this.storage.get('plan')\n      .then((data) => this.plan = data)\n      .catch(() => console.log('error setting plan'));\n  }\n\n  getAllQuestionsByQuestionary(questionary, currentIndex, isRuralZone) {\n    this.questionProvider.getAllQuestionsByQuestionary(questionary, isRuralZone)\n      .then((result: Question[]) => {\n        if (result != null) {\n          this.questions = result;\n          this.currentQuestion = this.questions[currentIndex];\n          this.progress = ((currentIndex + 1) / this.questions.length) * 100;\n          this.totalQuestions = this.questions.length;\n          //-----------ARRUMANDO AS RESPOSTAS-------------------\n          let id = this.currentQuestion.id;\n          if(id == \"1003\" || id == \"1008\" || id == \"1019\"){\n            this.showDontNow = false;\n          }\n          //-----------ARRUMANDO AS RESPOSTAS-------------------\n        } else {\n          let alert = this.alertCtrl.create({\n            title: 'Oops!',\n            message: 'Não foi possível acessar os dados do servidor. Por favor, tente novamente.',\n            buttons: [{\n              text: \"Tentar novamente\",\n              handler: () => {\n                this.getAllQuestionsByQuestionary(questionary, currentIndex, isRuralZone);\n              }\n            }]\n          });\n          alert.present();\n        }\n      })\n      .catch(() => {\n        let alert = this.alertCtrl.create({\n          title: 'Oops!',\n          message: 'Não foi possível acessar os dados do servidor. Por favor, tente novamente.',\n          buttons: [{\n            text: \"Tentar novamente\",\n            handler: () => {\n              this.getAllQuestionsByQuestionary(questionary, currentIndex, isRuralZone);\n            }\n          }]\n        });\n        alert.present();\n      });\n  }\n\n  isRuralZone() {\n    this.storage.get('isRuralZone')\n      .then(\n        data => {\n          this.getAllQuestionsByQuestionary(this.questionary, this.currentQuestionIndex, data);\n        },\n        error => {\n          this.getAllQuestionsByQuestionary(this.questionary, this.currentQuestionIndex, 0);\n        }\n      )\n      .catch(() => {\n        this.getAllQuestionsByQuestionary(this.questionary, this.currentQuestionIndex, 0);\n      });\n  }\n\n  answerToQuestion(value) {\n    this.questionAnswer = value;\n    switch (value) {\n      case this.NO: //no\n        this.isNoSelected = true;\n        this.isYesSelected = false;\n        this.isDontKnowSelected = false;\n        break;\n      case this.YES: //yes\n        this.isNoSelected = false;\n        this.isYesSelected = true;\n        this.isDontKnowSelected = false;\n        break;\n      case this.DONT_KNOW: //dont know\n        this.isNoSelected = false;\n        this.isYesSelected = false;\n        this.isDontKnowSelected = true;\n        break;\n    }\n    this.enableContinueButton();\n    this.scrollToBottom();\n  }\n\n  neighborhoodRadioSelected(value) {\n    this.neighborhoodsSelected = [];\n    if (value == this.CITY_PROBLEM) { //cidade\n      this.neighborhoodsSelected = [];\n    } else if (value == this.RESPONDENT_NEIGHBORHOOD_PROBLEM) { //somente bairro do respondente\n      this.neighborhoodsSelected.push(this.respondent.residenceNeighborhood);\n    }\n    this.neighborhoodAnswer = value;\n    this.showNeighborhoodList = value == this.MANY_NEIGHBORHOODS_PROBLEM;\n    this.enableContinueButton();\n    this.scrollToBottom();\n  }\n\n  enableContinueButton() {\n    //Tirar o this.isYesSelected para ativar o GUT\n    if (this.isNoSelected || this.isDontKnowSelected || this.isYesSelected) {\n      this.btnContinueDisabled = false;\n    } else if (this.isYesSelected) {\n      if (this.neighborhoodAnswer == this.CITY_PROBLEM || this.neighborhoodAnswer == this.RESPONDENT_NEIGHBORHOOD_PROBLEM) {\n        this.btnContinueDisabled = false;\n      } else if (this.neighborhoodAnswer == this.MANY_NEIGHBORHOODS_PROBLEM) {\n        this.btnContinueDisabled = !(!!this.neighborhoodsSelected && this.neighborhoodsSelected.length > 0);\n      } else {\n        this.btnContinueDisabled = true;\n      }\n    } else {\n      this.btnContinueDisabled = true;\n    }\n  }\n\n  createAnswer(plan, questionary, currentQuestion, respondent, questionAnswer) {\n    let answer = new Answer();\n    answer.plan = plan;\n    answer.questionary = questionary;\n    answer.question = currentQuestion;\n    answer.respondent = respondent;\n    answer.answer = questionAnswer;\n    answer.created_at = new Date().toISOString();\n    answer.isCompleted = false;\n    this.answers.push(answer);\n  }\n\n  createAnswersNeighborhoods() {\n    if (this.neighborhoodsSelected.length > 0) {\n      this.neighborhoodsSelected.forEach((neighborhood) => {\n        let answerNeighborhood = new AnswerNeighborhood();\n        answerNeighborhood.plan = this.plan;\n        answerNeighborhood.questionary = this.questionary;\n        answerNeighborhood.question = this.currentQuestion;\n        answerNeighborhood.respondent = this.respondent;\n        answerNeighborhood.neighborhood = neighborhood;\n        answerNeighborhood.created_at = new Date().toISOString();\n        this.answersNeighborhoods.push(answerNeighborhood);\n      });\n    }\n  }\n\n  nextStep() {\n    this.deleteAnswer();\n    this.createAnswer(this.plan, this.questionary, this.currentQuestion, this.respondent, this.questionAnswer);\n    this.deleteAnswersNeighborhoods();\n    this.createAnswersNeighborhoods();\n    this.navigate();\n  }\n\n  deleteAnswer() {\n    this.answers = this.answers.filter(answer => !(answer.plan.id == this.plan.id && answer.questionary.id == this.questionary.id && answer.respondent.id == this.respondent.id && answer.question.id == this.currentQuestion.id));\n  }\n\n  deleteAnswersNeighborhoods() {\n    this.answersNeighborhoods = this.answersNeighborhoods.filter(answerNeighborhood => !(answerNeighborhood.plan.id == this.plan.id && answerNeighborhood.questionary.id == this.questionary.id && answerNeighborhood.respondent.id == this.respondent.id && answerNeighborhood.question.id == this.currentQuestion.id))\n  }\n\n  navigate() {\n    this.loader = this.loadingCtrl.create();\n    this.loader.present();\n    //O plano esta habilitado pra usar a escala GUT\n    if (this.plan.usePrioritization == true) {\n      //Se a resposta for YES vai para a página de priorization com GUT\n      if (this.questionAnswer == this.YES) {\n        if (this.metricItems.length > 0) {\n          this.navigatePrioritizationPage(this.plan, this.respondent, this.questionary, this.neighborhoods, this.questions, this.metricItems, this.metricItems[0], 0, this.currentQuestionIndex, this.currentQuestion, this.answers, this.answersNeighborhoods, this.prioritizations)\n        } else {\n          this.points = this.points + 1;\n          this.navigateThankYouPage();\n        }\n      //Se não, vai para a página do questionário\n      } else {\n        this.points = this.points + 1;\n        if (this.currentQuestionIndex + 1 < this.questions.length) {\n          this.navigateQuestionaryPage();\n        } else {\n          this.navigateThankYouPage();\n        }\n      }\n    //O plano não esta habilitado para usar a escala GUT\n    //Nesse caso pode usar outras métricas\n    } else {\n      if (this.currentQuestionIndex + 1 < this.questions.length) { \n        //se metric_id for nulo, navega para página de questionário\n        if (this.questions[this.currentQuestionIndex + 1].metricId == null) {\n          this.points = this.points + 1;\n          this.navigateQuestionaryPage();\n        //Se houver metric_id, carrega as métricas específicas  e navega para página de priorization\n        } else { \n          this.loadMetrics(this.questions[this.currentQuestionIndex + 1].metricId);\n        }\n      } else {\n        this.points = this.points + 1;\n        this.navigateThankYouPage();\n      }\n    }\n  }\n\n  insertAnswerAndNavigateToPrioritization() {\n    this.createAnswer(this.plan, this.questionary, this.questions[this.currentQuestionIndex + 1], this.respondent, this.YES);\n    this.navigatePrioritizationPage(this.plan, this.respondent, this.questionary, this.neighborhoods, this.questions, this.metricItems, this.metricItems[0], 0, this.currentQuestionIndex + 1, this.questions[this.currentQuestionIndex + 1], this.answers, this.answersNeighborhoods, this.prioritizations);\n  }\n\n  navigateThankYouPage() {\n    //Navegação para pagina de agradecimento\n    this.navCtrl.push('ThankyouPage', {\n      questions: this.questions,\n      questionary: this.questionary,\n      points: this.points,\n      answers: this.answers,\n      answersNeighborhoods: this.answersNeighborhoods,\n      prioritizations: this.prioritizations\n    }).then(this.loader.dismiss());\n  }\n\n  navigateQuestionaryPage() {\n    //Navegação para página do questionário\n    this.navCtrl.push('QuestionaryPage', {\n      points: this.points,\n      respondent: this.respondent,\n      questionary: this.questionary,\n      neighborhoods: this.neighborhoods,\n      currentQuestionIndex: this.currentQuestionIndex + 1,\n      currentQuestion: this.questions[this.currentQuestionIndex + 1],\n      metricItems: this.metricItems,\n      answers: this.answers,\n      answersNeighborhoods: this.answersNeighborhoods,\n      prioritizations: this.prioritizations\n    }).then(this.loader.dismiss());\n  }\n\n  navigatePrioritizationPage(plan, respondent, questionary, neighborhoods, questions, metricItems, currentMetricItem, currentMetricItemIndex, currentQuestionIndex, currentQuestion, answers, answersNeighborhoods, prioritizations) {\n    // Navegação para página do questinário\n    this.navCtrl.push('PrioritizationPage', {\n      points: this.points,\n      plan: plan,\n      respondent: respondent,\n      questionary: questionary,\n      neighborhoods: neighborhoods,\n      questions: questions,\n      metricItems: metricItems,\n      currentMetricItem: currentMetricItem,\n      currentMetricItemIndex: currentMetricItemIndex,\n      currentQuestionIndex: currentQuestionIndex,\n      currentQuestion: currentQuestion,\n      answers: answers,\n      answersNeighborhoods: answersNeighborhoods,\n      prioritizations: prioritizations\n    }).then(this.loader.dismiss());\n  }\n\n  loadMetrics(metricId) {\n    //------------------------CARREGA OS ITENS DE MÉTRICAS-----------------------------\n    //1 - GUT, 2 - ESCALA QUALITATIVA, (3-17) - Métricas do questionário de teste\n    this.priorizationProvider.getMetricItems(metricId)\n    .then((metricItems: MetricItem[]) => {\n      if (metricItems != null) {\n        this.metricItems = metricItems;\n        //------------------------CARREGA OS VALORES DE MÉTRICA-----------------------------\n        this.priorizationProvider.getMetricValues()\n        .then((result: MetricValue[]) => {\n          if (result != null) {\n                //------------------------ASSOCIA OS VALORES AOS ITENS-----------------------------\n                for (let i = 0; i < this.metricItems.length; i++) {\n                  let metricItem = this.metricItems[i];\n                  for (let j = 0; j < result.length; j++) {\n                    let metricValue = result[j];\n                    if (metricItem.id == metricValue.metricItemId) {\n                      this.metricItems[i].metricValues.push(metricValue);\n                    }\n                  }\n                }\n                //------------------------SALVA OS ITENS DE MÉTRICA-----------------------------\n                this.storage.set('metricItems', this.metricItems);\n                this.insertAnswerAndNavigateToPrioritization();\n              } else {\n                this.showAlertLoadMetrics(metricId);\n              }\n            })\n            .catch(() => {\n              this.showAlertLoadMetrics(metricId);\n            });\n        } else {\n          this.showAlertLoadMetrics(metricId);\n        }\n      })\n      .catch(() => {\n        this.showAlertLoadMetrics(metricId);\n      });\n  }\n\n  showAlertLoadMetrics(metricId) {\n    this.metricItems = [];\n    let alert = this.alertCtrl.create({\n      title: 'Oops!',\n      message: 'Não foi possível acessar os dados do servidor. Por favor, tente novamente.',\n      buttons: [{\n        text: \"Tentar novamente\",\n        handler: () => {\n          this.loadMetrics(metricId);\n        }\n      }]\n    });\n    alert.present();\n  }\n\n  scrollToBottom() {\n    if (!!this.content) {\n      let content = this.content;\n      setTimeout(function () {\n        content.scrollToBottom(100);\n      }, 100);\n    }\n  }\n\n  help() {\n    let alert = this.alertCtrl.create({\n      title: '<div text-center>Então, vamos soltar a imaginação!</div>',\n      message:\n      '<div text-center>' + this.currentQuestion.narrative + '</div>'\n      + '<div class=\"alert-align-center\"><img class=\"img-alert\" src=\"https://azpng.com/png/2019/08/01/thinking-clipart-student-collection-transparent.png\" /></div>',\n      buttons: [{\n        text: \"Ok!\",\n        handler: () => {\n        }\n      }]\n    });\n    alert.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/questionary/questionary.ts"],"sourceRoot":""}